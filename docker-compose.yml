version: '3'

services:
  # Target application to be scanned
  juice-shop:
    image: bkimminich/juice-shop
    ports:
      - "3000:3000"
    networks:
      - zap-network

  # ZAP with Web UI for manual testing and learning
  zap-ui:
    image: zaproxy/zap-stable
    command: zap-webswing.sh      # Start ZAP with web-based GUI
    ports:
      - "8080:8080"              # Access ZAP UI at http://localhost:8080/zap/
    networks:
      - zap-network              # Connect to shared network for container communication

  # Baseline scan service - passive scanning only (safe, fast)
  baseline-scan:
    image: zaproxy/zap-stable
    volumes:
      - ./reports:/zap/wrk:rw    # Mount reports folder
    entrypoint: /bin/bash
    command: >
      -c "
      DATE=$$(date +%Y-%m-%d);
      NUM=1;
      while [ -d /zap/wrk/report-$$DATE-$$NUM ]; do
        NUM=$$((NUM + 1));
      done;
      DIR=report-$$DATE-$$NUM;
      mkdir -p /zap/wrk/$$DIR;
      echo 'Creating report in: /zap/wrk/'$$DIR;
      zap-baseline.py -t http://juice-shop:3000 -r $$DIR/baseline-report.html -w $$DIR/baseline-report.md -J $$DIR/baseline-report.json
      "
    profiles:
      - scan
    networks:
      - zap-network

  # Full scan service
  full-scan:
    image: zaproxy/zap-stable
    volumes:
      - ./reports:/zap/wrk:rw
    entrypoint: /bin/bash
    command: >
      -c "
      DATE=$$(date +%Y-%m-%d);
      NUM=1;
      while [ -d /zap/wrk/report-$$DATE-$$NUM ]; do
        NUM=$$((NUM + 1));
      done;
      DIR=report-$$DATE-$$NUM;
      mkdir -p /zap/wrk/$$DIR;
      echo 'Creating report in: /zap/wrk/'$$DIR;
      zap-full-scan.py -t http://juice-shop:3000 -r $$DIR/full-scan-report.html -w $$DIR/full-scan-report.md -J $$DIR/full-scan-report.json -m 10
      "
    profiles:
      - scan
    networks:
      - zap-network

networks:
  zap-network:
    driver: bridge # Standard Docker network driver
                   # Allows containers to communicate using service names